I"ig<h1 id="docker-pester---run-crossplatform-tests-locally">Docker Pester - Run crossplatform tests locally!</h1>

<p>In this Blogpost you’ll learn how to run the Pester tests for your Powershell project on multiple operating systems locally.</p>

<p><a href="https://github.com/bateskevin/DockerPester">DockerPester</a> makes this possible.</p>

<h2 id="what-you-need-to-do-this">What you need to do this</h2>

<p>there are a few prerequisites you should install to use</p>

<h3 id="docker-">Docker <img src="https://static1.squarespace.com/static/5bfe78fe9d5abb94164ed3af/5c0f8b3c4fa51a03ef54a96b/5c112c188a922d6c219dcad6/1556553088561/docker-whale.png?format=1500w" alt="DockerLogo" height="50px" width="50px" /></h3>

<p>Docker is a containerization software that let’s you run containers on your machine.</p>

<p>Install it on your platform. It is available for Linux, MacOS and Windows here: <a href="https://hub.docker.com/?overlay=onboarding">Download Docker</a></p>

<h3 id="docker-context">Docker Context</h3>

<p>I’m by no means a specialist when it comes to docker. Actually I only just started with docker myself, but one of
the things I learned about it, is that you can pull docker images only if they fit the architecture of your OS.</p>

<p>So standardwise you will not be able to run a Linux container on your Windows machine of vice versa. On your Mac
you will be able to run Linux containers, but not Windows Containers.</p>

<h3 id="switch-context-on-windows">Switch Context on Windows</h3>

<p>On Docker for Windows you can switch your Context once you’re running Docker Desktop very easily.</p>

<p>Click the Arrow up in right bottom corner:</p>

<p><img src="https://docs.docker.com/docker-for-windows/images/whale-icon-systray-hidden.png" alt="arrow" /></p>

<p>And then Switch the Context by Clicking on ‘Switch to Winows Containers’ or ‘Switch to Linux Containers’ if Windows is already active:</p>

<p><img src="https://docs.docker.com/docker-for-windows/images/docker-menu-settings.png" alt="arrow" /></p>

<p>This is how you switch between linux and windows containers on Windows.</p>

<h3 id="switch-context-on-mac">Switch Context on Mac</h3>

<p>There is a possibility to add a Windows docker Context on MacOS.</p>

<p>I will not describe this in detail in this blog post, since it’s already documented very well on Github by Stefan Scherer Here:</p>

<p><a href="https://github.com/StefanScherer/windows-docker-machine#working-on-macos">Add Docker Windows Context on MacOS</a></p>

<p>If you follow this documentation you will have a Windows Context called “2019-box”</p>

<h1 id="dockerpester">DockerPester</h1>

<p>Ok so now you should have installed Docker on your machine, which makes you ready to use DockerPester.</p>

<h2 id="installing-dockerpester">Installing DockerPester</h2>

<p>The Module is currently not available on the Gallery. So at the moment the only option of using it you have is to fork and clone the repo.</p>

<h2 id="first-run-of-dockerpester">First run of DockerPester</h2>

<p>So to start off you just need a Powershell Project of yours with some Pester Tests. Create a Hashtable that 
contains the following Key Value pairs:</p>

<figure class="highlight">
  <pre><code class="language-powershell" data-lang="powershell"><span class="nv">$ParamSet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">@{</span><span class="w">
  </span><span class="nx">ContainerName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"DockerPester"</span><span class="w"> </span><span class="err">#</span><span class="nx">Name</span><span class="w"> </span><span class="nx">of</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Container</span><span class="w"> </span><span class="nx">used</span><span class="w"> </span><span class="nx">to</span><span class="w"> </span><span class="nx">Test</span><span class="err">.</span><span class="w">
  </span><span class="nx">Image</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"mcr.microsoft.com/powershell:7.0.0-rc.2-alpine-3.8"</span><span class="w"> </span><span class="err">#</span><span class="nx">Image</span><span class="w"> </span><span class="nx">used</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Container</span><span class="w">
  </span><span class="nx">InputFolder</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"/Users/kevin/code/PSHarmonize"</span><span class="err">#</span><span class="nx">Module</span><span class="w"> </span><span class="nx">or</span><span class="w"> </span><span class="nx">Folder</span><span class="w"> </span><span class="nx">you</span><span class="w"> </span><span class="nx">pass</span><span class="w"> </span><span class="nx">with</span><span class="w"> </span><span class="nx">your</span><span class="w"> </span><span class="nx">Tests</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">them</span><span class="w">
  </span><span class="nx">PathOnContainer</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"/var"</span><span class="w"> </span><span class="err">#</span><span class="nx">Path</span><span class="w"> </span><span class="nx">you</span><span class="w"> </span><span class="nx">want</span><span class="w"> </span><span class="nx">to</span><span class="w"> </span><span class="nx">copy</span><span class="w"> </span><span class="nx">to</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">your</span><span class="w"> </span><span class="nx">container</span><span class="w">
  </span><span class="nx">PathToTests</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Tests"</span><span class="w"> </span><span class="err">#</span><span class="nx">Path</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="s1">'InputFolder'</span><span class="w"> </span><span class="nx">where</span><span class="w"> </span><span class="nx">your</span><span class="w"> </span><span class="nx">Tests</span><span class="w"> </span><span class="nx">are</span><span class="w"> </span><span class="nx">located</span><span class="w">
  </span><span class="nx">PrerequisiteModule</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"PSHTML"</span><span class="w"> </span><span class="err">#</span><span class="nx">Pass</span><span class="w"> </span><span class="nx">Modules</span><span class="w"> </span><span class="nx">that</span><span class="w"> </span><span class="nx">are</span><span class="w"> </span><span class="nx">prerequisites</span><span class="w"> </span><span class="nx">to</span><span class="w"> </span><span class="nx">your</span><span class="w"> </span><span class="nx">tests</span><span class="w"> </span><span class="nx">to</span><span class="w"> </span><span class="nx">download</span><span class="w"> </span><span class="nx">from</span><span class="w"> </span><span class="nx">gallery</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="nx">container</span><span class="err">.</span><span class="w">
  </span><span class="nx">Executor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"LNX"</span><span class="w"> </span><span class="err">#</span><span class="nx">The</span><span class="w"> </span><span class="nx">executor</span><span class="w"> </span><span class="nx">is</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">OS</span><span class="w"> </span><span class="nx">of</span><span class="w"> </span><span class="nx">your</span><span class="w"> </span><span class="nx">Machine</span><span class="w"> </span><span class="err">-</span><span class="w"> </span><span class="nx">Docker</span><span class="w"> </span><span class="nx">host</span><span class="err">.</span><span class="w"> </span><span class="nx">If</span><span class="w"> </span><span class="nx">you</span><span class="w"> </span><span class="nx">run</span><span class="w"> </span><span class="nx">on</span><span class="w"> </span><span class="nx">Windows</span><span class="w"> </span><span class="nx">you</span><span class="w"> </span><span class="nx">set</span><span class="w"> </span><span class="s2">"WIN"</span><span class="w"> </span><span class="nx">if</span><span class="w"> </span><span class="nx">you</span><span class="w"> </span><span class="nx">run</span><span class="w"> </span><span class="nx">on</span><span class="w"> </span><span class="nx">MacOS</span><span class="w"> </span><span class="nx">or</span><span class="w"> </span><span class="nx">Linux</span><span class="w"> </span><span class="nx">you</span><span class="w"> </span><span class="nx">set</span><span class="w"> </span><span class="s2">"LNX"</span><span class="w">
</span><span class="p">}</span></code></pre>
</figure>

<p>Each Parameter we define in the hashtable is shortly described with a comment on the same line. Make sure you’re in the right context for the Image you define here and the Executor matches your OS. Also make sure to change the ‘InputFolder’ to an actual project with Pestertests in them. ‘PathToTests’ is the Path in your Powershell Project Folder where your Tests are located.</p>

<p>To run your first DockerPester run use the following code:</p>

<figure class="highlight">
  <pre><code class="language-powershell" data-lang="powershell"><span class="nf">Invoke-DockerPester</span><span class="w"> </span><span class="err">@</span><span class="nx">ParamSet</span></code></pre>
</figure>

<p>So here we basically just splat the Parameters we defined in the Hash $ParamSet to ‘Invoke-DockerPester’.</p>

<p>So what will that do. First it will spin up a Container with the Image we defined in our Hash. The ContainerName we set will be the name of that container. Then it will copy the Powershell Module Project Folder from your local Computer that you defined under ‘InputFolder’ to the path you defined in ‘PathOnContainer’ on the Container. After that it will start downloading the Prerequisite modules that you defined to download from the gallery and it will install the newest version of Pester and yes, the output on that is not sooooooo nice I will admit that, but hey, we all need room to grow right?</p>

<p>After the installation of the modules it will start executing the Pester Tests. And when that’s done it will return the Passthru Object from Pester back to you.</p>

<p>The Output you will see should look like this:</p>

<figure class="highlight">
  <pre><code class="language-powershell" data-lang="powershell"><span class="nf">PS</span><span class="w"> </span><span class="nx">/Users/kevin</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">Invoke-DockerPester</span><span class="w"> </span><span class="err">@</span><span class="nx">ParamSet</span><span class="w">                                 
</span><span class="nf">f6b8047075adc5ee491b772b9321e85bf0e628d9add2a1ff9f79ea254894227a</span><span class="w">
</span><span class="nf">DockerPester</span><span class="w">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 </span><span class="nf">Installing</span><span class="w"> </span><span class="nx">package</span><span class="w"> </span><span class="s1">'PSHTML'</span><span class="w">                                                        </span><span class="nx">Downloaded</span><span class="w"> </span><span class="nx">0.00</span><span class="w"> </span><span class="nx">MB</span><span class="w"> </span><span class="nx">out</span><span class="w"> </span><span class="nx">of</span><span class="w"> </span><span class="nx">0.64</span><span class="w"> </span><span class="nx">MB.</span><span class="w">                                              </span><span class="p">[</span><span class="w">                                                                    </span><span class="p">]</span><span class="wspan><span class="nx">Installing</span><span class="w"> </span><span class="nx">package</span><span class="w"> </span><span class="s1">'Pester'</span><span class="w">                                                        </span><span class="nx">Downloaded</span><span class="w"> </span><span class="nx">0.00</span><span class="w"> </span><span class="nx">MB</span><span class="w"> </span><span class="nx">out</span><span class="w"> </span><span class="nx">of</span><span class="w"> </span><span class="nx">0.85</span><span class="w"> </span><span class="nx">MB.</span><span class="w">                                              </span><span class="p">[</span><span class="w">                                                                    </span><span class="p">]</span><span class="w">                                                                                                                                                                       </span><span class="nx">Installing</span><span class="w"> </span><span class="nx">package</span><span class="w"> </span><span class="s1">'Pester'</span><span class="w">                                                        </span><span class="nx">Process</span><span class="w"> </span><span class="nx">Package</span><span class="w"> </span><span class="nx">Manifest</span><span class="w">                                                        </span><span class="p">[</span><span class="kt">oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo</span><span class="w">    </span><span class="p">]</span><span class="w">                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      </span><span class="nx">Pester</span><span class="w"> </span><span class="nx">v4.10.1</span><span class="w">
</span><span class="nf">Executing</span><span class="w"> </span><span class="nx">all</span><span class="w"> </span><span class="nx">tests</span><span class="w"> </span><span class="nx">in</span><span class="w"> </span><span class="s1">'/var/PSHarmonize/Tests'</span><span class="w">

</span><span class="nf">Executing</span><span class="w"> </span><span class="nx">script</span><span class="w"> </span><span class="nx">/var/PSHarmonize/Tests/Functions.Letters.Tests.ps1</span><span class="w">

  </span><span class="nf">Describing</span><span class="w"> </span><span class="p">[</span><span class="kt">PSHarmonize</span><span class="p">][</span><span class="kt">Functions</span><span class="p">]</span><span class="w"> </span><span class="nx">Testing</span><span class="w"> </span><span class="nx">Letter</span><span class="w"> </span><span class="nx">Functions</span><span class="w">

    </span><span class="nf">Context</span><span class="w"> </span><span class="p">[</span><span class="kt">PSHarmonize</span><span class="p">][</span><span class="kt">Functions</span><span class="p">][</span><span class="kt">Letter</span><span class="p">]</span><span class="w"> </span><span class="nx">C</span><span class="w"> </span><span class="nx">Without</span><span class="w"> </span><span class="nx">Parameters.</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">The</span><span class="w"> </span><span class="nx">Function</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="nx">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">not</span><span class="w"> </span><span class="nx">throw</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">Parameters.</span><span class="w"> </span><span class="nx">165ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'EnharmonicFlavour'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">18ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'IsPause'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">3ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'Length'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">39ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'Letter'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">17ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'NoteMapping'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">17ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'Numeral'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">12ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'Octave'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">11ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="nf">C</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">Contain</span><span class="w"> </span><span class="nx">the</span><span class="w"> </span><span class="nx">Correct</span><span class="w"> </span><span class="nx">Property</span><span class="w"> </span><span class="nx">for</span><span class="w"> </span><span class="s1">'Velocity'</span><span class="w"> </span><span class="nx">without</span><span class="w"> </span><span class="nx">any</span><span class="w"> </span><span class="nx">Parameters</span><span class="w"> </span><span class="nx">10ms</span><span class="w">

    </span><span class="nf">Context</span><span class="w"> </span><span class="p">[</span><span class="kt">PSHarmonize</span><span class="p">][</span><span class="kt">Functions</span><span class="p">][</span><span class="kt">Letter</span><span class="p">]</span><span class="w"> </span><span class="nx">C</span><span class="w"> </span><span class="nx">Wit</span><span class="w"> </span><span class="nx">Parameters.</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="kt">PSHarmonize</span><span class="p">][</span><span class="kt">Functions</span><span class="p">][</span><span class="kt">Letter</span><span class="p">]</span><span class="w"> </span><span class="nf">Octave</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">be</span><span class="w"> </span><span class="nx">assignable</span><span class="w"> </span><span class="nx">14ms</span><span class="w">
      </span><span class="p">[</span><span class="o">+</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="kt">PSHarmonize</span><span class="p">][</span><span class="kt">Functions</span><span class="p">][</span><span class="kt">Letter</span><span class="p">]</span><span class="w"> </span><span class="nf">Octave</span><span class="w"> </span><span class="nx">should</span><span class="w"> </span><span class="nx">be</span><span class="w"> </span><span class="nx">assignable</span><span class="w"> </span><span class="nx">11ms</span><span class="w">

    </span><span class="nf">Context</span><span class="w"> </span><span class="p">[</span><span class="kt">PSHarmonize</span><span class="p">][</span><span class="kt">Functions</span><span class="p">][</span><span class="kt">Letter</span><span class="p">]</span><span class="w"> </span><span class="nx">Chords</span><span class="w"> </span><span class="nx">of</span><span class="w"> </span><span class="nx">C</span></code></pre>
</figure>

<p>If you want to save the PassThru Object of your Tests to a variable use the following Code:</p>

<figure class="highlight">
  <pre><code class="language-powershell" data-lang="powershell"><span class="nv">$PassThru</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">Invoke-DockerPester</span><span class="w"> </span><span class="err">@</span><span class="nx">ParamSet</span></code></pre>
</figure>

<p>In there you will find all the filled Properties of your standart PassThru Object from Pester.</p>
:ET